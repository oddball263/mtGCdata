install.packages("RCurl")
install.packages("XML")
install.packages("stringr")
install.packages("pylr")
install.packages("dpylr")
# Read the URL.
url <- "http://www.geos.ed.ac.uk/~weather/jcmb_ws/"
# Gather the html links present in the webpage.
links <- getHTMLLinks(url)
# Identify only the links which point to the JCMB 2015 files.
filenames <- links[str_detect(links, "JCMB_2015")]
# Store the file names as a list.
filenames_list <- as.list(filenames)
# Create a function to download the files by passing the URL and filename list.
downloadcsv <- function (mainurl,filename) {
filedetails <- str_c(mainurl,filename)
download.file(filedetails,filename)
}
# Now apply the l_ply function and save the files into the current R working directory.
l_ply(filenames,downloadcsv,mainurl = "http://www.geos.ed.ac.uk/~weather/jcmb_ws/")
links <- getHTMLLinks(url)
library(Rcurl)
library(Rurl)
library(RCurl)
install.packages("bitops")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
con <- url("http://scholar.google.com/citations?user=HI-I60aaaaj&hl=en")
htmlcode <- readLines(con)
close(con)
htmlcode
install.packages("data.table")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
setwd("~/GitDir/JH-U/G_and_C_data/data_cp")
library(plyr)
library(dplyr)
library(data.table)
# - download files
# SET DATE
# for both test and train --------subject / activity / results -----
# 1. name variables in each col/file - 3 files x 2
# 2. gather only cols necesary - mean and sd x_set
# 3. Make one large table with 3 files - for atrain and test
# add row for train / test
# 4. merge test and train
# 5. rename cols# 6. rename activities
# 1. -------results data - x_test/train.txt ---------
x_train <- fread("./UCI_HAR_Dataset/train/x_train.txt")
x_test <- fread("./UCI_HAR_Dataset/test/x_test.txt")
features <- fread("./UCI_HAR_Dataset/features.txt")
# Name variables w origina names
names(x_train) <- features[ , V2]
names(x_test) <- features[ , V2]
head(x_test) # check
# 2. -------subject data - subject_test/train.txt ---------
subject_train <- fread("./UCI_HAR_Dataset/train/subject_train.txt")
subject_test <- fread("./UCI_HAR_Dataset/test/subject_test.txt")
# Name variable
names(subject_train) <- 'Subject'
names(subject_test) <- 'Subject'
# Add varialble 'Subject' to main table x_test and x_train
x_test$Subject <- subject_test[, Subject]
x_train$Subject <- subject_train[, Subject]
# 2. -------Activity data - y_test/train.txt ---------
y_train <- fread("./UCI_HAR_Dataset/train/y_train.txt")
y_test <- fread("./UCI_HAR_Dataset/test/y_test.txt")
# Name variable
names(y_train) <- 'Activity'
names(y_test) <- 'Activity'
# Add varialble 'Activity' to main table x_test and x_train
x_test$Activity <- y_test[, Activity]
x_train$Activity <- y_train[, Activity]
# 3. ------- get only Mean and SD vars ---------
filter_by_mean_sd <- fread("./UCI_HAR_Dataset/mean_sd_features.txt")
mean_sd_vars <- filter_by_mean_sd[,V1]
test_data_mean_sd <- subset(x_test,  select=mean_sd_vars)
train_data_mean_sd <- subset(x_train,  select=mean_sd_vars)
mergedData = rbind(test_data_mean_sd, train_data_mean_sd)
# 4. -------Set Activity Description ---------
mergedData$ActivityDescription <- "" #add a col
mergedData[mergedData$Activity ==  5, 69]  <- "STANDING"
mergedData[mergedData$Activity ==  1, 69]  <- "WALKING"
mergedData[mergedData$Activity ==  2, 69]  <- "WALKING_UPSTAIRS"
mergedData[mergedData$Activity ==  3, 69]  <- "WALKING_DOWNSTAIRS"
mergedData[mergedData$Activity ==  4, 69]  <- "SITTING"
mergedData[mergedData$Activity ==  6, 69]  <- "LAYING"
cols <- colnames(mergedData)
cols_rev<- gsub("^t", "timed", cols)
cols_rev<- gsub("^f", "frequency", cols_rev)
cols_rev<- gsub("Acc", "Acceleration", cols_rev)
cols_rev<- gsub("Mag", "Magnitude", cols_rev)
colnames(mergedData) <- cols_rev
cdata <- ddply(mergedData, c("Subject", "ActivityDescription"), summarise,
mean = mean(mergedData$`timedBodyAcceleration-mean()-X`)
)
View(cdata)
cdata <- ddply(mergedData, c("Subject", "ActivityDescription"),
mean = mean(mergedData$`timedBodyAcceleration-mean()-X`)
)
View(cdata)
cdata <- ddply(mergedData, c("Subject", "Activity","ActivityDescription"), summarise_each_q(mean())
)
cdata <- ddply(mergedData, c("Subject", "Activity","ActivityDescription"), summarise_each_(mergedData, mean())
)
cdata <- ddply(mergedData, c("Subject", "Activity","ActivityDescription"), summarise_each_(mergedData, mean(), mergedData[,])
)
cdata <- ddply(mergedData, c("Subject", "Activity","ActivityDescription"), summarise_each_(mergedData, mean( mergedData[,]))
)
cdata <- ddply(mergedData, c("Subject", "Activity","ActivityDescription"), summarise_each(mergedData,mean)
)
library("lazyeval", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
cdata <- ddply(mergedData, c("Subject", "Activity","ActivityDescription"), summarise_each(mergedData,mean)
)
cdata <- summarise(mergedData)
cdata <- summarise(mergedData, mean)
View(cdata)
cdata <- summarise(mergedData, mean, mergedData[,])
?summarise
cdata <- summarise(mergedData, mean())
cdata <- summarise(group_by(mergedData, c("Subject", "Activity","ActivityDescription"), mean())
cdata <- group_by(mergedData, c("Subject", "Activity","ActivityDescription"))
cdata <- group_by(mergedData, c("Subject", "Activity","ActivityDescription"))
cdata <- group_by(mergedData, c("Subject", "Activity","ActivityDescription"), 'p')
View(cdata)
colnames(mergedData)
cdata <- ddply(mergedData, c("Subject", "Activity","ActivityDescription"), summarise,
x = mean('timedBodyAcceleration-mean()-X')
)
View(cdata)
cl <- colnames(mergedData)
cdata <- ddply(mergedData, c("Subject", "Activity","ActivityDescription"), summarise,
cl = mean(cl)
)
View(cdata)
cols_rev<- gsub("-mean()", "Mean", cols_rev)
cols_rev<- gsub("-std()", "StndDev", cols_rev)
colnames(mergedData) <- cols_rev
colnames(mergedData)
cols_rev<- gsub("\\(", "", cols_rev)
cols_rev
cols_rev<- gsub("\\)", "", cols_rev)
cols_rev<- gsub("-", "", cols_rev)
cols_rev
cols_rev<- gsub("Acceleration", "Acc", cols_rev)
cols_rev
cols_rev<- gsub("^frequency", "freq", cols_rev)
cols_rev
cols_rev<- gsub("Magnitude", "Mag", cols_rev)
cols_rev
colnames(mergedData) <- cols_rev
cl <- colnames(mergedData)
colnames(mergedData)
cl <- NULL
cdata <- ddply(mergedData, c("Subject", "Activity","ActivityDescription"), summarise,
'timedBodyAccMeanY' = mean('timedBodyAccMeanY')
)
warnings
warnings()
cdata <- ddply(mergedData, c("Subject", "Activity","ActivityDescription"), summarise,
timedBodyAccMeanY = mean(timedBodyAccMeanY)
)
View(cdata)
gdata <- mergedData[, lapply(mean), by = c("Subject", "Activity","ActivityDescription")]
gdata <- mergedData[, lapply(.mean), by = c("Subject", "Activity","ActivityDescription")]
gdata <- mergedData[, lapply(mergedData, mean), by = c("Subject", "Activity","ActivityDescription")]
gdata <- mergedData[, lapply(.SD, mean), by = c("Subject", "Activity","ActivityDescription")]
View(gdata)
wdata <- mergedData %>%  group_by(c("Subject", "Activity","ActivityDescription"))
%>% summarise_each(funs(mean))
wdata <- mergedData %>%  group_by(c("Subject", "Activity","ActivityDescription")) %>% summarise_each(funs(mean))
wdata <- mergedData %>%  group_by(c("Subject", "Activity","ActivityDescription")) %>% summarise_each(funs(mean))
wdata <- mergedData %>%  group_by(c(Subject, Activity,ActivityDescription)) %>% summarise_each(funs(mean))
wdata <- mergedData %>%  group_by(Subject, Activity,ActivityDescription) %>% summarise_each(funs(mean))
View(wdata)
groupedData <- mergedData %>%  group_by(Subject, Activity,ActivityDescription) %>% summarise_each(funs(mean))
View(groupedData)
write.table(groupedData,"tidy_groupedData.txt", sep="\t", row.names=F)
setwd("~/GitDir/JH-U/G_and_C_data/data_cp/UCI_HAR_Dataset")
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(file_url, "UCI_HA_Dataset.zip", method = "curl")
summary(groupedData)
dim(groupedData)
str(groupData)
str(groupedData)
setwd("~/GitDir/JH-U/G_and_C_data/mtGCdata")
td <- fread("tidy_data.txt")
View(td)
td <- fread("averaged_data.txt")
td <- fread("averaged-data.txt")
View(td)
me <- fread("tidy_groupeddata.txt")
View(me)
